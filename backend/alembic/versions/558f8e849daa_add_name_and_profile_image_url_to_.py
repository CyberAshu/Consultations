"""add name and profile_image_url to consultants

Revision ID: 558f8e849daa
Revises: 74fc1b53ccf7
Create Date: 2025-08-03 12:52:01.134656

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '558f8e849daa'
down_revision = '74fc1b53ccf7'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_services_id', table_name='services')
    op.drop_index('ix_services_is_active', table_name='services')
    op.drop_table('services')
    op.drop_index('ix_testimonials_id', table_name='testimonials')
    op.drop_index('ix_testimonials_is_active', table_name='testimonials')
    op.drop_table('testimonials')
    op.drop_index('ix_faqs_category', table_name='faqs')
    op.drop_index('ix_faqs_id', table_name='faqs')
    op.drop_index('ix_faqs_is_active', table_name='faqs')
    op.drop_table('faqs')
    op.drop_index('ix_newsletter_email', table_name='newsletter_subscriptions')
    op.drop_index('ix_newsletter_status', table_name='newsletter_subscriptions')
    op.drop_table('newsletter_subscriptions')
    op.alter_column('consultant_applications', 'confirm_licensed_rcic',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('consultant_applications', 'agree_terms_guidelines',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('consultant_applications', 'agree_compliance_irpa',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('consultant_applications', 'agree_no_outside_contact',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('consultant_applications', 'consent_session_reviews',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('consultant_applications', 'digital_signature_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('consultant_applications', 'submission_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.add_column('consultants', sa.Column('name', sa.String(), nullable=False))
    op.add_column('consultants', sa.Column('profile_image_url', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('consultants', 'profile_image_url')
    op.drop_column('consultants', 'name')
    op.alter_column('consultant_applications', 'submission_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('consultant_applications', 'digital_signature_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('consultant_applications', 'consent_session_reviews',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('consultant_applications', 'agree_no_outside_contact',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('consultant_applications', 'agree_compliance_irpa',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('consultant_applications', 'agree_terms_guidelines',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('consultant_applications', 'confirm_licensed_rcic',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.create_table('newsletter_subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('subscribed_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('unsubscribed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='newsletter_subscriptions_pkey'),
    sa.UniqueConstraint('email', name='uq_newsletter_email')
    )
    op.create_index('ix_newsletter_status', 'newsletter_subscriptions', ['status'], unique=False)
    op.create_index('ix_newsletter_email', 'newsletter_subscriptions', ['email'], unique=False)
    op.create_table('faqs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('answer', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('order_index', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.VARCHAR(length=10), server_default=sa.text("'true'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='faqs_pkey')
    )
    op.create_index('ix_faqs_is_active', 'faqs', ['is_active'], unique=False)
    op.create_index('ix_faqs_id', 'faqs', ['id'], unique=False)
    op.create_index('ix_faqs_category', 'faqs', ['category'], unique=False)
    op.create_table('testimonials',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('quote', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), server_default=sa.text("'5'::double precision"), autoincrement=False, nullable=False),
    sa.Column('flag', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('outcome', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.VARCHAR(length=10), server_default=sa.text("'true'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='testimonials_pkey')
    )
    op.create_index('ix_testimonials_is_active', 'testimonials', ['is_active'], unique=False)
    op.create_index('ix_testimonials_id', 'testimonials', ['id'], unique=False)
    op.create_table('services',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('icon', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('features', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('order_index', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.VARCHAR(length=10), server_default=sa.text("'true'::character varying"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='services_pkey')
    )
    op.create_index('ix_services_is_active', 'services', ['is_active'], unique=False)
    op.create_index('ix_services_id', 'services', ['id'], unique=False)
    # ### end Alembic commands ###
